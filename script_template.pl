#!/usr/bin/perl
# Author:
# Email:
# Date:
# Script:

################################################################################
# TODO:
# - be able to select more than 1 organism to check
################################################################################

################################################################################
# PERL CONFIGURATION
################################################################################

use strict;
use warnings;

################################################################################
# PACKAGES
################################################################################

use Cwd;
use Getopt::Long;
use File::Basename;
use String::Util qw(trim);

my $script_name = basename($0) ;

################################################################################
# FUNCTIONS
################################################################################

sub usage {

	print STDERR <<EOF;

Usage:
	$script_name -a xxx [-o OUTDIR] [-v]
	$script_name [-h]

Required parameters:
	-a | --parameter : xxx                  [required]

Optionnal parameters:
	-o | --outdir   : output directory      [by default: working directory]

Help:
	-v | --verbose  : verbose mode (yes|no) [by default: no]
	-h | --help     : print this help

Description:

	TO BE COMPLETED!

EOF

}

################################################################################
# DEFAULTS #
################################################################################

my $paramA  = "NOTDEFINED";
my $outdir  = getcwd();
my $verbose = "no";
my $help    = 0;

################################################################################
# OPTIONS
################################################################################

GetOptions (
	"a|parameter=s" => \$paramA,  # string
	"o|outdir=s"    => \$outdir,  # file
	"v|verbose=s"   => \$verbose, # string
	"h|help"        => \$help,    # flag
) or die ("Error in command line parameters\n");

################################################################################

if( $help || $paramA eq "NOTDEFINED" ) {
	usage();
	exit;
}

if( $verbose ne "yes" && $verbose ne "no" ) {
	print STDERR "-v|--verbose must be 'yes' or 'no'\n";
	exit;
}

################################################################################
# START SCRIPT
################################################################################

print STDERR "[$script_name] ---> START\n";

################################################################################

if ( $verbose eq "yes" ){
	print STDERR "[$script_name] ---> Parameter -a    : ".$paramA."\n" ;
	print STDERR "[$script_name] ---> Output directory: ".$outdir."\n" ;
	print STDERR "[$script_name] ---> Verbose         : ".$verbose."\n" ;
}

# open(my $FH_paramA, '<:encoding(UTF-8)', $paramA) or die "Could not open file '$paramA' $!";
# while (my $row = <$FH_paramA>) {
# 	chomp $row;
# 	print "$row\n";
# }
# close($FH_paramA);

# my $filename = 'report.txt';
# open(my $fh, '>', $filename) or die "Could not open file '$filename' $!";
# print $fh "My first report generated by perl\n";
# close $fh;
# print "done\n";

################################################################################
# END SCRIPT
################################################################################

print STDERR "[$script_name] ---> END\n";
